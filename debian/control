Source: golang-github-grpc-ecosystem-go-grpc-middleware
Section: golang
Priority: optional
Maintainer: Debian Go Packaging Team <team+pkg-go@tracker.debian.org>
Uploaders: Pirate Praveen <praveen@debian.org>,
           Shengjing Zhu <zhsj@debian.org>,
Build-Depends: debhelper-compat (= 13),
               dh-golang,
               golang-any,
               golang-github-go-kit-kit-dev,
               golang-github-gogo-protobuf-dev,
               golang-github-golang-protobuf-1-3-dev,
               golang-github-opentracing-opentracing-go-dev,
               golang-github-sirupsen-logrus-dev (>= 1.4.2~),
               golang-github-stretchr-testify-dev,
               golang-go.uber-zap-dev,
               golang-golang-x-net-dev,
               golang-golang-x-oauth2-dev,
               golang-google-grpc-dev (>= 1.27.1~),
Standards-Version: 4.6.2
Homepage: https://github.com/grpc-ecosystem/go-grpc-middleware
Vcs-Browser: https://salsa.debian.org/go-team/packages/golang-github-grpc-ecosystem-go-grpc-middleware
Vcs-Git: https://salsa.debian.org/go-team/packages/golang-github-grpc-ecosystem-go-grpc-middleware.git
XS-Go-Import-Path: github.com/grpc-ecosystem/go-grpc-middleware
Rules-Requires-Root: no
Testsuite: autopkgtest-pkg-go

Package: golang-github-grpc-ecosystem-go-grpc-middleware-dev
Architecture: all
Multi-Arch: foreign
Depends: golang-github-go-kit-kit-dev,
         golang-github-golang-protobuf-1-3-dev | golang-github-golang-protobuf-1-5-dev,
         golang-github-opentracing-opentracing-go-dev,
         golang-github-sirupsen-logrus-dev (>= 1.4.2~),
         golang-go.uber-zap-dev,
         golang-golang-x-net-dev,
         golang-google-grpc-dev (>= 1.27.1~),
         ${misc:Depends},
Description: Go gRPC Middlewares: interceptor chaining, auth, logging, retries and more
 gRPC Go recently acquired support for Interceptors, i.e. middleware
 that is executed either on the gRPC Server before the request is passed
 onto the user's application logic, or on the gRPC client either around
 the user call. It is a perfect way to implement common patterns: auth,
 logging, message, validation, retries or monitoring.
 .
 These are generic building blocks that make it easy to build multiple
 microservices easily. The purpose of this repository is to act as a
 go-to point for such reusable functionality. It contains some of them
 itself, but also will link to useful external repos.
 .
 grpc_middleware itself provides support for chaining interceptors.
